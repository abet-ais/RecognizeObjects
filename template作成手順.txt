linemod自動テンプレート作成手順

・阿部の環境
-Ubuntu 14.04
-ROS indigo
-OpenCV 2.4.8 + OpenCV contrib
-c++ 11
-blender 2.79b-linux-glibc219-x86_64(低いバージョンでは.daeが生成できないので注意)
-gazebo 2.2.3

・方法
1.準備
  1-1.対象となる部品をcadにより作成し,.STLファイルにて出力(メートルで出力)

  1-2.blenderを立ち上げ作成したSTLをインポートし,.daeにて出力する
      出力場所は ~/(各環境でのpath)/description_of_linemodtemp/meshes/


2.colllada形式のモデルデータをgazeboで扱えるようする
  2-1.roscd description_of_linemodtemp/urdf
      emacs linemod_template.urdf

  2-2.上記urdfの中の<mesh ~>にpathを指定する
---ex----------------------
  <link name="mesh_model_link">
    <collision>
      <origin rpy="0 0 0" xyz="0.1 0.1 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <mesh filename="package://.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0.1 0.1 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
---------------------------

  2-3.roslaunch abe_camera_gazebo abe_kinect.launch

  2-4.gazebo空間を無重力にする
---ex----------------------
rosservice call /gazebo/set_physics_properties "
time_step: 0.001
max_update_rate: 1000.0
gravity:
  x: 0.0
  y: 0.0
  z: 0
ode_config:
  auto_disable_bodies: False
  sor_pgs_precon_iters: 0
  sor_pgs_iters: 50
  sor_pgs_w: 1.3
  sor_pgs_rms_error_tol: 0.0
  contact_surface_layer: 0.001
  contact_max_correcting_vel: 100.0
  cfm: 0.0
  erp: 0.2
  max_contacts: 20"
---------------------------

 2-5.rosrun gazebo_ros spawn_model -file `rospack find description_of_linemodtemp`/urdf/linemod_template.urdf -urdf -x 0 -y 0 -z 1 -model linemod_template



3.テンプレート自動作成起動
 case1)WRS2018 taskboard
    rosrun abe_gazebo_planner createTemp_TB "カメラと部品の距離[m]"
    rosrun object_recognition createTemp_TB_gazebo　"生成したいymlファイルの名前" "バウンディングボックス"

 case2)WRS2018 kitting
  rosrun abe_gazeboPlanner createTemp_Ki "カメラと部品の距離[m]"
  rosrun object_recognition createTemp_Ki_gazebo　"生成したいymlファイルの名前" "バウンディングボックス"
 
 case3)簡易的なテンプレートが作りたいとき
  rosrun abe_gazeboPlanner createTemp_min "カメラと部品の距離[m]"
  rosrun object_recognition createTemp_Ki_gazebo "生成したいymlファイルの名前" "バウンディングボックス"

4.認識
	
  rosrun object_recognition pixel_to
  rosrun object_recognition linemod_rgb "~.yml" ・・・












